1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia
	SELECT `students`.* 
	FROM `students` 
	JOIN `degrees` 
	ON `students`.`degree_id`=`degrees`.`id` 
	WHERE `degrees`.`name`='corso di laurea in economia';

2. Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di
Neuroscienze
	SELECT `degrees`.* 
	FROM `degrees` JOIN `departments` 
	ON `departments`.`id`=`degrees`.`department_id` 
	WHERE `departments`.`name`='dipartimento di neuroscienze' AND `degrees`.`level`='magistrale';

3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)
	SELECT `courses`.*, `teachers`.`name`, `teachers`.`surname` 
	FROM `courses` 
	JOIN `course_teacher` 
	ON `course_teacher`.`course_id`=`courses`.`id` 
	JOIN `teachers` 
	ON `teachers`.`id`=`course_teacher`.`teacher_id` 
	WHERE `teachers`.`id`=44;

4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui
sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e
nome
	SELECT `students`.`surname`, `students`.`name`, `students`.`registration_number`, `degrees`.`name` as `degree`, `departments`.`name` AS `department` 
	FROM `students` 
	JOIN `degrees` 
	ON `degrees`.`id`=`students`.`degree_id` 
	JOIN `departments` 
	ON `departments`.`id`=`degrees`.`department_id` 
	ORDER BY `students`.`surname`, `students`.`name`;

5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti
	SELECT `degrees`.`name` AS `degree`, `degrees`.`level`, `courses`.`name` AS `course`, `courses`.`year`, `teachers`.`surname`, `teachers`.`name`
	FROM `degrees`
	JOIN `courses`
	ON `courses`.`degree_id`=`degrees`.`id`
	JOIN `course_teacher`
	ON `course_teacher`.`course_id`=`courses`.`id`
	JOIN `teachers`
	ON `teachers`.`id`=`course_teacher`.`teacher_id`
	ORDER BY `degree`, `degrees`.`level`, `courses`.`year`, `course`, `teachers`.`surname`, `teachers`.`name`;

6. Selezionare tutti i docenti che insegnano nel Dipartimento di
Matematica (54)
	SELECT `departments`.`name` AS `department`,`teachers`.`id` AS `teacher_id`, `teachers`.`surname`, `teachers`.`name` 
	FROM `departments` 
	JOIN `degrees` 
	ON `degrees`.`department_id`=`departments`.`id` 
	JOIN `courses` 
	ON `courses`.`degree_id`=`degrees`.`id` 
	JOIN `course_teacher` 
	ON `course_teacher`.`course_id`=`courses`.`id` 
	JOIN `teachers` 
	ON `teachers`.`id`=`course_teacher`.`teacher_id` 
	WHERE `departments`.`id`=5 
	ORDER BY `teachers`.`surname`, `teachers`.`name`;

7. BONUS: Selezionare per ogni studente il numero di tentativi sostenuti
per ogni esame, stampando anche il voto massimo. Successivamente,
filtrare i tentativi con voto minimo 18.
	SELECT `students`.`surname`, `students`.`name`, `students`.`registration_number`, `courses`.`name` AS `course`, COUNT(`exam_student`.`vote`) AS `attempts`, MAX(`exam_student`.`vote`) AS `higher_vote`
	FROM `students`
	JOIN `exam_student`
	ON `exam_student`.`student_id`=`students`.`id`
	JOIN `exams`
	ON `exams`.`id`=`exam_student`.`exam_id`
	JOIN `courses`
	ON `courses`.`id`=`exams`.`course_id`
	GROUP BY `students`.`registration_number`, `courses`.`id`
	ORDER BY `students`.`surname`, `students`.`name`;

	SELECT `students`.`surname`, `students`.`name`, `students`.`registration_number`, `courses`.`name` AS `course`, COUNT(`exam_student`.`vote`) AS `attempts`, MAX(`exam_student`.`vote`) AS `higher_vote`
	FROM `students`
	JOIN `exam_student`
	ON `exam_student`.`student_id`=`students`.`id`
	JOIN `exams`
	ON `exams`.`id`=`exam_student`.`exam_id`
	JOIN `courses`
	ON `courses`.`id`=`exams`.`course_id`
	GROUP BY `students`.`registration_number`, `courses`.`id`
	HAVING `higher_vote` >= 18
	ORDER BY `students`.`surname`, `students`.`name`;
